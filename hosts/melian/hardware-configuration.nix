# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  configVars,
  lib,
  pkgs,
  modulesPath,
  ...
}:

{
  imports = [ (modulesPath + "/installer/scan/not-detected.nix") ];

  boot.initrd.luks.devices."root".device = "/dev/disk/by-partuuid/9839604a-3e2e-4833-83ef-ce0dc7206aa6";

  boot.initrd.availableKernelModules = [
    "xhci_pci"
    "ahci"
    "usb_storage"
    "sd_mod"
    "rtsx_pci_sdmmc"
  ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/boot" = {
    device = "/dev/disk/by-partuuid/70b01ab1-7657-4878-baa8-a3314746f5ae";
    fsType = "vfat";
  };

  fileSystems."/" = {
    device = "none";
    fsType = "tmpfs";
    options = [
      "mode=755"
      "uid=0"
      "gid=0"
    ];
    neededForBoot = true; # required
  };

  fileSystems."/nix" = {
    device = "/dev/mapper/root";
    fsType = "btrfs";
    options = [
      "defaults"
      "compress-force=zstd"
      "noatime"
      "ssd"
      "subvol=nix"
    ];
    neededForBoot = true; # required
  };

  fileSystems."${configVars.persistFolder}" = {
    device = "/dev/mapper/root";
    fsType = "btrfs";
    options = [
      "defaults"
      "compress-force=zstd"
      "noatime"
      "ssd"
      "subvol=persist"
    ];
    neededForBoot = true; # required
  };

  # Not mounting Home so that we use the persist and impermanence instead for home!
  # fileSystems."/home" =
  #   { device = "/dev/mapper/root";
  #     fsType = "btrfs";
  #     options = [ "defaults" "compress-force=zstd" "noatime" "ssd" "subvol=home" ];
  #   };

  fileSystems."/etc/nixos" = {
    device = "/dev/mapper/root";
    fsType = "btrfs";
    options = [
      "defaults"
      "compress-force=zstd"
      "noatime"
      "ssd"
      "subvol=nixos-config"
    ];
  };

  swapDevices = [
    {
      device = "/dev/disk/by-partuuid/8c970c87-5bc2-4c5e-ac1b-d8ebfe5681b1";
      randomEncryption.enable = true;
    }
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp2s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
